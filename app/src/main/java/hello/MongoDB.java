/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hello;
import com.mongodb.*;
import java.net.UnknownHostException;

import java.io.*;
import org.bson.Document;

import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import org.apache.commons.io.IOUtils;
import org.bson.json.JsonObject;
import javax.naming.StringRefAddr;
import com.mongodb.client.model.InsertOneModel;
import com.mongodb.client.model.BulkWriteOptions;
import com.mongodb.bulk.BulkWriteResult;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.json.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class MongoDB {
	public static MongoClient mongoClient;
	public static DB database;
	public static DBCollection test;



    public static void main(String[] args) throws UnknownHostException {
        System.out.println("test");
        mongoClient = new MongoClient( new MongoClientURI("mongodb://localhost:27017"));
        database = mongoClient.getDB ("MongoDBTutorial");
        test = database.getCollection("test");

       	TestObj testObj = new TestObj();
       	testObj.setMemberID("abc");
       	testObj.setTimer(1);
       	testObj.setXp(2432);
       	test.insert(convert(testObj));

        DBObject query = new BasicDBObject("XP", 2432);

        DBCursor cursor = test.find(query);
        while (cursor.hasNext()) {
          DBObject next = cursor.next();
          System.out.println(next);
        }

        /*deleted everything that was added before*/
        //does not create if not exists
        //https://stackoverflow.com/questions/35758690/mongodb-insertmany-vs-bulkwrite
        MongoDatabase database2 = mongoClient.getDatabase("MongoDBTutorial");
        MongoCollection<Document> test2 = database2.getCollection("test");
        bulkInsert(test2);
        System.out.println(new File(".").getAbsolutePath());

        
    }

    public static DBObject convert(TestObj testObj) {
    	return new BasicDBObject("XP", testObj.getXp()).append("Timer", testObj.getTimer()).append("memberID", testObj.getMemberID());
    }

   public static void bulkInsert( MongoCollection<Document> coll) {
            try {
         //drop previous import
            coll.drop();

            //Bulk Approach:
            int count = 0;
            int batch = 100;
            List<InsertOneModel<Document>> docs = new ArrayList<>();
            String json = Files.readString(Paths.get("testDocument.json"), StandardCharsets.UTF_8);
            JSONArray jsonarray = new JSONArray('[' + json + ']');

            try {
            for(int i = 0; i < jsonarray.length(); i++) {
                JSONObject line = jsonarray.getJSONObject(i);
                System.out.println("new line: " + line);
                docs.add(new InsertOneModel<>(Document.parse(line.toString())));
                count++;
            }

            //or count == batch
            if (count > 0) {
                BulkWriteResult bulkWriteResult =  coll.bulkWrite(docs, new BulkWriteOptions().ordered(false));
                System.out.println("Inserted" + bulkWriteResult);
                docs.clear();
                count = 0;
            }
        
            }

           
            

         catch (MongoWriteException e) {
            System.out.println("Error");
        }


            }

        catch(IOException e) {

        }
   

    }
}
